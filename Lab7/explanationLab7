a) When n<=2, and either the call or try commands are entered by the user the CatchTest class calls the "method1" method from the MethodChain class. The "method1" method accepts the next integer that is entered after the call or try commands. The system prints "Method 1 starting" and if the "level" (which is the number accepted by the mehod) is greater than zero "method1" calls "method2" and passes the "level" with one subtracted from it. "method2" prints out "Method 2 Starting" and if the now "level" minus one is greater than zero, "method3" is called and accpets "level" with another one subtracted. "method3" prints out "Method 3 starting" and if the original "level" with two now subtracted from it is still greater than zero it throws "DepthException" (but that will be talked about it part b). If the level is zero at this point "method3" prints out "Method 3 returning", "method2" then prints out "Method 2 returning", and finally "method1" prints "Method 1 returning". If "method3" or "method2" are not called they will not print anything and only the classes that are called will print the returning statements.

b) When n>2 and "call" is entered by the user, the program will crash because the "DepthException" that is thrown is not caught by anything. When n>2 and "try" is entered by the userm, the program will run through exactly like explained by part a until the "DepthException" is thrown. When the exception is thrown the program works back through the program until it reaches the "catch" block and a message is printed to the screen. The user is then prompted to input another command.